{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2025-03-08T02:40:51.942Z",
    "end": "2025-03-08T02:41:09.363Z",
    "duration": 17421,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ebb19ce8-ecd3-4dee-8bd8-ba0cdd8ea042",
      "title": "",
      "fullFile": "/Users/surendar/aws-webdriver-automation/tests/googleSearchTest.js",
      "file": "/tests/googleSearchTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "213a1056-eecf-47b4-a076-1afb6877fd32",
          "title": "Google Search Test",
          "fullFile": "/Users/surendar/aws-webdriver-automation/tests/googleSearchTest.js",
          "file": "/tests/googleSearchTest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Google Search Test\"",
              "fullTitle": "Google Search Test \"before all\" hook in \"Google Search Test\"",
              "timedOut": false,
              "duration": 844,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await getDriver();",
              "err": {},
              "uuid": "13943869-d8ec-4ed8-a8b3-cf0b524b9d6d",
              "parentUUID": "213a1056-eecf-47b4-a076-1afb6877fd32",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Google Search Test\"",
              "fullTitle": "Google Search Test \"after all\" hook in \"Google Search Test\"",
              "timedOut": false,
              "duration": 56,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "f29dfcc9-8131-44fe-9433-e27f84a391cf",
              "parentUUID": "213a1056-eecf-47b4-a076-1afb6877fd32",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should open Google homepage",
              "fullTitle": "Google Search Test should open Google homepage",
              "timedOut": false,
              "duration": 765,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"https://www.google.com\");\nawait takeScreenshot(driver, \"google_homepage\");",
              "err": {},
              "uuid": "4eb962ea-bd24-4cce-a74e-bfda86f5858d",
              "parentUUID": "213a1056-eecf-47b4-a076-1afb6877fd32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should search for 'Selenium WebDriver' and verify results",
              "fullTitle": "Google Search Test should search for 'Selenium WebDriver' and verify results",
              "timedOut": false,
              "duration": 15753,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(60000); // Increase timeout for execution\n// ✅ Open Google\nawait driver.get('https://www.google.com');\n// ✅ Accept cookies (if prompted)\ntry {\n    let acceptButton = await driver.findElement(By.css(\"button[aria-label='Accept all']\"));\n    await acceptButton.click();\n} catch (e) {\n    console.log(\"No cookie prompt found, proceeding...\");\n}\n// ✅ Wait for search box and type query\nlet searchBox = await driver.wait(until.elementLocated(By.name(\"q\")), 10000);\nawait searchBox.sendKeys(\"Selenium WebDriver\", Key.RETURN);\n// ✅ Wait for results section to appear\nlet searchResults = await driver.wait(until.elementLocated(By.css('div#search')), 15000);\nawait driver.wait(until.elementIsVisible(searchResults), 5000);\n// ✅ Take a screenshot after results load\nawait takeScreenshot(driver, \"google_search_results\");\n// ✅ Verify title contains the search term\nlet title = await driver.getTitle();\nassert(title.toLowerCase().includes(\"selenium webdriver\"), \"Title does not contain expected text\");",
              "err": {
                "message": "TimeoutError: Waiting for element to be located By(css selector, div#search)\nWait timed out after 15121ms",
                "estack": "TimeoutError: Waiting for element to be located By(css selector, div#search)\nWait timed out after 15121ms\n    at /Users/surendar/aws-webdriver-automation/node_modules/selenium-webdriver/lib/webdriver.js:928:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c17118b3-ad17-4ab0-94f6-d45994540b19",
              "parentUUID": "213a1056-eecf-47b4-a076-1afb6877fd32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4eb962ea-bd24-4cce-a74e-bfda86f5858d"
          ],
          "failures": [
            "c17118b3-ad17-4ab0-94f6-d45994540b19"
          ],
          "pending": [],
          "skipped": [],
          "duration": 16518,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 20000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "TestReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./reports",
        "reportFilename": "TestReport",
        "overwrite": "false"
      },
      "version": "6.2.0"
    }
  }
}